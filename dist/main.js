(()=>{var e={426:(e,l,n)=>{"use strict";n.d(l,{Z:()=>o});var t=n(537),r=n.n(t),u=n(645),a=n.n(u)()(r());a.push([e.id,".allBoards {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    gap: 48px;\n}\n\n.rows {\n    display: flex;\n}\n\n.cell {\n    height: 24px;\n    width: 24px;\n    border-style: solid;\n}\n\n.empty {\n    background-color: aqua;\n}\n\n.ship {\n    background-color: grey;\n}\n\n.hit {\n    background-color: red;\n}\n\n.goodGuess {\n    background-color: green;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:[".allBoards {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    gap: 48px;\n}\n\n.rows {\n    display: flex;\n}\n\n.cell {\n    height: 24px;\n    width: 24px;\n    border-style: solid;\n}\n\n.empty {\n    background-color: aqua;\n}\n\n.ship {\n    background-color: grey;\n}\n\n.hit {\n    background-color: red;\n}\n\n.goodGuess {\n    background-color: green;\n}"],sourceRoot:""}]);const o=a},645:e=>{"use strict";e.exports=function(e){var l=[];return l.toString=function(){return this.map((function(l){var n="",t=void 0!==l[5];return l[4]&&(n+="@supports (".concat(l[4],") {")),l[2]&&(n+="@media ".concat(l[2]," {")),t&&(n+="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {")),n+=e(l),t&&(n+="}"),l[2]&&(n+="}"),l[4]&&(n+="}"),n})).join("")},l.i=function(e,n,t,r,u){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(t)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(a[s]=!0)}for(var c=0;c<e.length;c++){var i=[].concat(e[c]);t&&a[i[0]]||(void 0!==u&&(void 0===i[5]||(i[1]="@layer".concat(i[5].length>0?" ".concat(i[5]):""," {").concat(i[1],"}")),i[5]=u),n&&(i[2]?(i[1]="@media ".concat(i[2]," {").concat(i[1],"}"),i[2]=n):i[2]=n),r&&(i[4]?(i[1]="@supports (".concat(i[4],") {").concat(i[1],"}"),i[4]=r):i[4]="".concat(r)),l.push(i))}},l}},537:e=>{"use strict";e.exports=function(e){var l=e[1],n=e[3];if(!n)return l;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),u="/*# ".concat(r," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[l].concat(a).concat([u]).join("\n")}return[l].join("\n")}},379:e=>{"use strict";var l=[];function n(e){for(var n=-1,t=0;t<l.length;t++)if(l[t].identifier===e){n=t;break}return n}function t(e,t){for(var u={},a=[],o=0;o<e.length;o++){var s=e[o],c=t.base?s[0]+t.base:s[0],i=u[c]||0,p="".concat(c," ").concat(i);u[c]=i+1;var d=n(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)l[d].references++,l[d].updater(m);else{var h=r(m,t);t.byIndex=o,l.splice(o,0,{identifier:p,updater:h,references:1})}a.push(p)}return a}function r(e,l){var n=l.domAPI(l);return n.update(e),function(l){if(l){if(l.css===e.css&&l.media===e.media&&l.sourceMap===e.sourceMap&&l.supports===e.supports&&l.layer===e.layer)return;n.update(e=l)}else n.remove()}}e.exports=function(e,r){var u=t(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<u.length;a++){var o=n(u[a]);l[o].references--}for(var s=t(e,r),c=0;c<u.length;c++){var i=n(u[c]);0===l[i].references&&(l[i].updater(),l.splice(i,1))}u=s}}},569:e=>{"use strict";var l={};e.exports=function(e,n){var t=function(e){if(void 0===l[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}l[e]=n}return l[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var l=document.createElement("style");return e.setAttributes(l,e.attributes),e.insert(l,e.options),l}},565:(e,l,n)=>{"use strict";e.exports=function(e){var l=n.nc;l&&e.setAttribute("nonce",l)}},795:e=>{"use strict";e.exports=function(e){var l=e.insertStyleElement(e);return{update:function(n){!function(e,l,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,r&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var u=n.sourceMap;u&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(u))))," */")),l.styleTagTransform(t,e,l.options)}(l,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(l)}}}},589:e=>{"use strict";e.exports=function(e,l){if(l.styleSheet)l.styleSheet.cssText=e;else{for(;l.firstChild;)l.removeChild(l.firstChild);l.appendChild(document.createTextNode(e))}}},347:e=>{const l=(e,n)=>{const t=[n.playerBoard.enemyGuesses,e.playerBoard.enemyGuesses,e.playerBoard.myBoard,n.playerBoard.myBoard];document.querySelector(".allBoards")&&document.querySelector(".allBoards").remove();const r=document.createElement("div");r.classList.add("allBoards");for(const u in t){const a=document.createElement("div");a.classList.add("boardContainer");for(const r in t[u]){const o=document.createElement("div");o.classList.add("rows");for(const a in t[u][r]){const s=document.createElement("div");s.classList.add("cell"),e.currentTurn&&!e.playerBoard.allSunk()&&t[u]===n.playerBoard.enemyGuesses&&s.addEventListener("click",(()=>{n.playerBoard.receiveAttack(r,a),e.currentTurn=!1,n.currentTurn=!0,l(e,n)})),n.currentTurn&&!n.playerBoard.allSunk()&&t[u]===e.playerBoard.enemyGuesses&&s.addEventListener("click",(()=>{e.playerBoard.receiveAttack(r,a),e.currentTurn=!0,n.currentTurn=!1,l(e,n)})),null===t[u][r][a]?s.classList.add("empty"):!1===t[u][r][a]?s.classList.add("hit"):!0===t[u][r][a]?s.classList.add("goodGuess"):s.classList.add("ship"),o.appendChild(s)}a.appendChild(o)}r.appendChild(a)}document.querySelector("#content").appendChild(r),document.querySelector(".turnDialog")&&document.querySelector(".turnDialog").remove();const u=document.createElement("div");u.classList.add("turnDialog"),e.playerBoard.allSunk()||n.playerBoard.allSunk()?e.playerBoard.allSunk()?u.textContent=`The Winner Is ${n.name}`:n.playerBoard.allSunk()&&(u.textContent=`The Winner Is ${e.name}`):e.currentTurn?u.textContent=`It's ${e.name}'s turn`:n.currentTurn&&(u.textContent=`It's ${n.name}'s turn`),document.querySelector("#content").appendChild(u)};e.exports=l},486:(e,l,n)=>{const t=n(643),r=n(498),u=n(507),a=n(347);e.exports=()=>{function e(e,l){const n=document.createElement("div");n.classList.add("shipInput");const t=document.createElement("div");t.textContent=l,n.appendChild(t);const r=document.createElement("label");r.setAttribute("for",`${e}${l}RowSelector`),r.textContent="Row #:",n.appendChild(r);const u=document.createElement("input");u.setAttribute("id",`${e}${l}RowSelector`),u.setAttribute("name",`${e}${l}RowSelector`),u.setAttribute("placeholder","number 0 - 9"),n.appendChild(u);const a=document.createElement("label");a.setAttribute("for",`${e}${l}ColSelector`),a.textContent="Column #:",n.appendChild(a);const o=document.createElement("input");o.setAttribute("id",`${e}${l}ColSelector`),o.setAttribute("name",`${e}${l}ColSelector`),o.setAttribute("placeholder","number 0 - 9"),n.appendChild(o);const s=document.createElement("label");s.setAttribute("for",`${e}${l}DirSelector`),s.textContent="Direction: ",n.appendChild(s);const c=document.createElement("select");c.setAttribute("id",`${e}${l}DirSelector`),c.setAttribute("name",`${e}${l}DirSelector`);const i=document.createElement("option");i.setAttribute("value","horizontal"),i.textContent="Horizontal",c.appendChild(i);const p=document.createElement("option");return p.setAttribute("value","vertical"),p.textContent="Vertical",c.appendChild(p),n.appendChild(c),n}const l=document.createElement("div");l.classList.add("setupContainer");const n=document.createElement("form");n.classList.add("formContainer");const o=document.createElement("div");o.classList.add("player1Container");const s=document.createElement("label");s.setAttribute("for","p1Name"),s.textContent="Player 1 Name:",o.appendChild(s);const c=document.createElement("input");c.setAttribute("id","p1Name"),c.setAttribute("placeholder","Your Name"),c.setAttribute("name","p1Name"),o.appendChild(c);const i=e("p1","Carrier");o.appendChild(i);const p=e("p1","Battleship");o.appendChild(p);const d=e("p1","Cruiser");o.appendChild(d);const m=e("p1","Submarine");o.appendChild(m);const h=e("p1","Destroyer");o.appendChild(h),n.appendChild(o);const C=document.createElement("div");C.classList.add("player2Container");const y=document.createElement("label");y.setAttribute("for","p2Name"),y.textContent="Player 2 Name:",C.appendChild(y);const v=document.createElement("input");v.setAttribute("id","p2Name"),v.setAttribute("name","p2Name"),v.setAttribute("placeholder","Your Name"),C.appendChild(v);const A=e("p2","Carrier");C.appendChild(A);const f=e("p2","Battleship");C.appendChild(f);const b=e("p2","Cruiser");C.appendChild(b);const S=e("p2","Submarine");C.appendChild(S);const B=e("p2","Destroyer");C.appendChild(B),n.appendChild(C),l.appendChild(n),startGameBtn=document.createElement("button"),startGameBtn.textContent="Start Game",startGameBtn.addEventListener("click",(()=>{const e=document.querySelector(".formContainer"),l=u(e.p1Name.value,r()),n=u(e.p2Name.value,r());l.currentTurn=!0,l.playerBoard.placeShip(Number(e.p1CarrierRowSelector.value),Number(e.p1CarrierColSelector.value),e.p1CarrierDirSelector.value,t(5,"carrier")),l.playerBoard.placeShip(Number(e.p1BattleshipRowSelector.value),Number(e.p1BattleshipColSelector.value),e.p1BattleshipDirSelector.value,t(4,"battleship")),l.playerBoard.placeShip(Number(e.p1CruiserRowSelector.value),Number(e.p1CruiserColSelector.value),e.p1CruiserDirSelector.value,t(3,"cruiser")),l.playerBoard.placeShip(Number(e.p1SubmarineRowSelector.value),Number(e.p1SubmarineColSelector.value),e.p1SubmarineDirSelector.value,t(3,"submarine")),l.playerBoard.placeShip(Number(e.p1DestroyerRowSelector.value),Number(e.p1DestroyerColSelector.value),e.p1DestroyerDirSelector.value,t(2,"destroyer")),n.playerBoard.placeShip(Number(e.p2CarrierRowSelector.value),Number(e.p2CarrierColSelector.value),e.p2CarrierDirSelector.value,t(5,"carrier")),n.playerBoard.placeShip(Number(e.p2BattleshipRowSelector.value),Number(e.p2BattleshipColSelector.value),e.p2BattleshipDirSelector.value,t(4,"battleship")),n.playerBoard.placeShip(Number(e.p2CruiserRowSelector.value),Number(e.p2CruiserColSelector.value),e.p2CruiserDirSelector.value,t(3,"cruiser")),n.playerBoard.placeShip(Number(e.p2SubmarineRowSelector.value),Number(e.p2SubmarineColSelector.value),e.p2SubmarineDirSelector.value,t(3,"submarine")),n.playerBoard.placeShip(Number(e.p2DestroyerRowSelector.value),Number(e.p2DestroyerColSelector.value),e.p2DestroyerDirSelector.value,t(2,"destroyer")),document.querySelector(".setupContainer").remove(),a(l,n)})),l.appendChild(startGameBtn),document.querySelector("#content").appendChild(l)}},498:e=>{e.exports=()=>({myBoard:[[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null]],enemyGuesses:[[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null]],myShips:{},placeShip(e,l,n,t){this.myShips[`${t.name}`]=t;let r=0;if("horizontal"===n){if(l+t.length>=0&&l+t.length<11)for(;l+r<l+t.length;)this.myBoard[e][l+r]=`${r}${t.name}`,r+=1}else if("vertical"===n&&e+t.length>0&&e+t.length<11)for(;e+r<e+t.length;)this.myBoard[e+r][l]=`${r}${t.name}`,r+=1},receiveAttack(e,l){let n;if(null!==this.myBoard[e][l]&&!1!==this.myBoard[e][l]){const t=this.myBoard[e][l],r=t[0],u=t.slice(1);this.myShips[`${u}`].hit(r),this.enemyGuesses[e][l]=!0,this.myBoard[e][l]=!1,n=[u,r]}else this.enemyGuesses[e][l]=!1,n=!1;return n},allSunk(){let e=!0;const l=this.myBoard.flat();for(const n in l)[null,!1].includes(l[n])||(e=!1);return e}})},507:e=>{e.exports=(e,l,n="person")=>({name:e,type:n,playerBoard:l,currentTurn:!1})},643:e=>{e.exports=(e,l)=>({length:e,name:l,damage:new Array(e).fill(!1),sunk:!1,hit(e){!1===this.sunk&&(this.damage[e]=!0,this.isSunk())},isSunk(){this.damage.includes(!1)||(this.sunk=!0)}})}},l={};function n(t){var r=l[t];if(void 0!==r)return r.exports;var u=l[t]={id:t,exports:{}};return e[t](u,u.exports,n),u.exports}n.n=e=>{var l=e&&e.__esModule?()=>e.default:()=>e;return n.d(l,{a:l}),l},n.d=(e,l)=>{for(var t in l)n.o(l,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:l[t]})},n.o=(e,l)=>Object.prototype.hasOwnProperty.call(e,l),n.nc=void 0,(()=>{"use strict";var e=n(379),l=n.n(e),t=n(795),r=n.n(t),u=n(569),a=n.n(u),o=n(565),s=n.n(o),c=n(216),i=n.n(c),p=n(589),d=n.n(p),m=n(426),h={};h.styleTagTransform=d(),h.setAttributes=s(),h.insert=a().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=i(),l()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;var C=n(486);n.n(C)()()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0FBVyxZQUFpQixXLG1CQ25CbEQsTSIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9ET01EaXNwbGF5Q29udHJvbGxlci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9zcmMvRE9NU2V0dXBGb3JtLmpzIiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC8uL3NyYy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL3BsYXllci5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9zcmMvc2hpcC5qcyIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL29kaW4tYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9vZGluLWJhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vb2Rpbi1iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmFsbEJvYXJkcyB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xcbiAgICBnYXA6IDQ4cHg7XFxufVxcblxcbi5yb3dzIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuLmNlbGwge1xcbiAgICBoZWlnaHQ6IDI0cHg7XFxuICAgIHdpZHRoOiAyNHB4O1xcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbn1cXG5cXG4uZW1wdHkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xcbn1cXG5cXG4uc2hpcCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZXk7XFxufVxcblxcbi5oaXQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcblxcbi5nb29kR3Vlc3Mge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuYWxsQm9hcmRzIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XFxuICAgIGdhcDogNDhweDtcXG59XFxuXFxuLnJvd3Mge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uY2VsbCB7XFxuICAgIGhlaWdodDogMjRweDtcXG4gICAgd2lkdGg6IDI0cHg7XFxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XFxufVxcblxcbi5lbXB0eSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XFxufVxcblxcbi5zaGlwIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXG59XFxuXFxuLmhpdCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuXFxuLmdvb2RHdWVzcyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsImNvbnN0IERPTURpc3BsYXlDb250cm9sbGVyID0gKHBsYXllcjEsIHBsYXllcjIpID0+IHtcbiAgY29uc3QgaWRrID0gW1xuICAgIHBsYXllcjIucGxheWVyQm9hcmQuZW5lbXlHdWVzc2VzLFxuICAgIHBsYXllcjEucGxheWVyQm9hcmQuZW5lbXlHdWVzc2VzLFxuICAgIHBsYXllcjEucGxheWVyQm9hcmQubXlCb2FyZCxcbiAgICBwbGF5ZXIyLnBsYXllckJvYXJkLm15Qm9hcmQsXG4gIF07XG5cbiAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGxCb2FyZHMnKSkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGxCb2FyZHMnKS5yZW1vdmUoKTtcbiAgfVxuXG4gIGNvbnN0IGFsbEJvYXJkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhbGxCb2FyZHMuY2xhc3NMaXN0LmFkZCgnYWxsQm9hcmRzJyk7XG5cbiAgZm9yIChjb25zdCBhQm9hcmQgaW4gaWRrKSB7XG4gICAgY29uc3QgYm9hcmRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBib2FyZENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdib2FyZENvbnRhaW5lcicpO1xuXG4gICAgZm9yIChjb25zdCByb3cgaW4gaWRrW2FCb2FyZF0pIHtcbiAgICAgIGNvbnN0IHJvd3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHJvd3MuY2xhc3NMaXN0LmFkZCgncm93cycpO1xuICAgICAgZm9yIChjb25zdCBjb2wgaW4gaWRrW2FCb2FyZF1bcm93XSkge1xuICAgICAgICBjb25zdCBjZWxsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZCgnY2VsbCcpO1xuXG4gICAgICAgIGlmIChwbGF5ZXIxLmN1cnJlbnRUdXJuICYmICFwbGF5ZXIxLnBsYXllckJvYXJkLmFsbFN1bmsoKSkge1xuICAgICAgICAgIGlmIChpZGtbYUJvYXJkXSA9PT0gcGxheWVyMi5wbGF5ZXJCb2FyZC5lbmVteUd1ZXNzZXMpIHtcbiAgICAgICAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgIHBsYXllcjIucGxheWVyQm9hcmQucmVjZWl2ZUF0dGFjayhyb3csIGNvbCk7XG4gICAgICAgICAgICAgIHBsYXllcjEuY3VycmVudFR1cm4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgcGxheWVyMi5jdXJyZW50VHVybiA9IHRydWU7XG4gICAgICAgICAgICAgIERPTURpc3BsYXlDb250cm9sbGVyKHBsYXllcjEsIHBsYXllcjIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBsYXllcjIuY3VycmVudFR1cm4gJiYgIXBsYXllcjIucGxheWVyQm9hcmQuYWxsU3VuaygpKSB7XG4gICAgICAgICAgaWYgKGlka1thQm9hcmRdID09PSBwbGF5ZXIxLnBsYXllckJvYXJkLmVuZW15R3Vlc3Nlcykge1xuICAgICAgICAgICAgY2VsbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgcGxheWVyMS5wbGF5ZXJCb2FyZC5yZWNlaXZlQXR0YWNrKHJvdywgY29sKTtcbiAgICAgICAgICAgICAgcGxheWVyMS5jdXJyZW50VHVybiA9IHRydWU7XG4gICAgICAgICAgICAgIHBsYXllcjIuY3VycmVudFR1cm4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgRE9NRGlzcGxheUNvbnRyb2xsZXIocGxheWVyMSwgcGxheWVyMik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaWRrW2FCb2FyZF1bcm93XVtjb2xdID09PSBudWxsKSB7XG4gICAgICAgICAgY2VsbC5jbGFzc0xpc3QuYWRkKCdlbXB0eScpO1xuICAgICAgICB9IGVsc2UgaWYgKGlka1thQm9hcmRdW3Jvd11bY29sXSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBjZWxsLmNsYXNzTGlzdC5hZGQoJ2hpdCcpO1xuICAgICAgICB9IGVsc2UgaWYgKGlka1thQm9hcmRdW3Jvd11bY29sXSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGNlbGwuY2xhc3NMaXN0LmFkZCgnZ29vZEd1ZXNzJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2VsbC5jbGFzc0xpc3QuYWRkKCdzaGlwJyk7XG4gICAgICAgIH1cbiAgICAgICAgcm93cy5hcHBlbmRDaGlsZChjZWxsKTtcbiAgICAgIH1cbiAgICAgIGJvYXJkQ29udGFpbmVyLmFwcGVuZENoaWxkKHJvd3MpO1xuICAgIH1cbiAgICBhbGxCb2FyZHMuYXBwZW5kQ2hpbGQoYm9hcmRDb250YWluZXIpO1xuICB9XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250ZW50JykuYXBwZW5kQ2hpbGQoYWxsQm9hcmRzKTtcblxuICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnR1cm5EaWFsb2cnKSkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50dXJuRGlhbG9nJykucmVtb3ZlKCk7XG4gIH1cblxuICBjb25zdCB0dXJuRGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHR1cm5EaWFsb2cuY2xhc3NMaXN0LmFkZCgndHVybkRpYWxvZycpO1xuICBpZiAoIXBsYXllcjEucGxheWVyQm9hcmQuYWxsU3VuaygpICYmICFwbGF5ZXIyLnBsYXllckJvYXJkLmFsbFN1bmsoKSkge1xuICAgIGlmIChwbGF5ZXIxLmN1cnJlbnRUdXJuKSB7XG4gICAgICB0dXJuRGlhbG9nLnRleHRDb250ZW50ID0gYEl0J3MgJHtwbGF5ZXIxLm5hbWV9J3MgdHVybmA7XG4gICAgfSBlbHNlIGlmIChwbGF5ZXIyLmN1cnJlbnRUdXJuKSB7XG4gICAgICB0dXJuRGlhbG9nLnRleHRDb250ZW50ID0gYEl0J3MgJHtwbGF5ZXIyLm5hbWV9J3MgdHVybmA7XG4gICAgfVxuICB9IGVsc2UgaWYgKHBsYXllcjEucGxheWVyQm9hcmQuYWxsU3VuaygpKSB7XG4gICAgdHVybkRpYWxvZy50ZXh0Q29udGVudCA9IGBUaGUgV2lubmVyIElzICR7cGxheWVyMi5uYW1lfWA7XG4gIH0gZWxzZSBpZiAocGxheWVyMi5wbGF5ZXJCb2FyZC5hbGxTdW5rKCkpIHtcbiAgICB0dXJuRGlhbG9nLnRleHRDb250ZW50ID0gYFRoZSBXaW5uZXIgSXMgJHtwbGF5ZXIxLm5hbWV9YDtcbiAgfVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGVudCcpLmFwcGVuZENoaWxkKHR1cm5EaWFsb2cpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBET01EaXNwbGF5Q29udHJvbGxlcjtcblxuLy8gY29uc2lkZXIgbGFiZWxpbmcgYm9hcmRzIGFzICdwbGF5Qm9hcmQnIGFuZCAnZ3Vlc3NCb2FyZCcgdG8gYmV0dGVyIGNvbnRyb2wgZGlzcGxheSBjb2xvcnNcbiIsImNvbnN0IFNoaXAgPSByZXF1aXJlKCcuL3NoaXAnKTtcbmNvbnN0IEdhbWVib2FyZCA9IHJlcXVpcmUoJy4vZ2FtZWJvYXJkJyk7XG5jb25zdCBQbGF5ZXIgPSByZXF1aXJlKCcuL3BsYXllcicpO1xuY29uc3QgRE9NRGlzcGxheUNvbnRyb2xsZXIgPSByZXF1aXJlKCcuL0RPTURpc3BsYXlDb250cm9sbGVyJyk7XG5cbmNvbnN0IERPTVNldHVwRm9ybSA9ICgpID0+IHtcbiAgZnVuY3Rpb24gbWFrZVNoaXBJbnB1dChwbGF5ZXIsIHNoaXBOYW1lKSB7XG4gICAgY29uc3QgcmVzdWx0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcmVzdWx0RGl2LmNsYXNzTGlzdC5hZGQoJ3NoaXBJbnB1dCcpO1xuXG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsYWJlbC50ZXh0Q29udGVudCA9IHNoaXBOYW1lO1xuICAgIHJlc3VsdERpdi5hcHBlbmRDaGlsZChsYWJlbCk7XG5cbiAgICBjb25zdCByb3dTZWxlY3RvckxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICByb3dTZWxlY3RvckxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgYCR7cGxheWVyfSR7c2hpcE5hbWV9Um93U2VsZWN0b3JgKTtcbiAgICByb3dTZWxlY3RvckxhYmVsLnRleHRDb250ZW50ID0gJ1JvdyAjOic7XG4gICAgcmVzdWx0RGl2LmFwcGVuZENoaWxkKHJvd1NlbGVjdG9yTGFiZWwpO1xuXG4gICAgY29uc3Qgcm93U2VsZWN0b3JJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcm93U2VsZWN0b3JJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgYCR7cGxheWVyfSR7c2hpcE5hbWV9Um93U2VsZWN0b3JgKTtcbiAgICByb3dTZWxlY3RvcklucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsIGAke3BsYXllcn0ke3NoaXBOYW1lfVJvd1NlbGVjdG9yYCk7XG4gICAgcm93U2VsZWN0b3JJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ251bWJlciAwIC0gOScpO1xuICAgIHJlc3VsdERpdi5hcHBlbmRDaGlsZChyb3dTZWxlY3RvcklucHV0KTtcblxuICAgIGNvbnN0IGNvbFNlbGVjdG9yTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGNvbFNlbGVjdG9yTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCBgJHtwbGF5ZXJ9JHtzaGlwTmFtZX1Db2xTZWxlY3RvcmApO1xuICAgIGNvbFNlbGVjdG9yTGFiZWwudGV4dENvbnRlbnQgPSAnQ29sdW1uICM6JztcbiAgICByZXN1bHREaXYuYXBwZW5kQ2hpbGQoY29sU2VsZWN0b3JMYWJlbCk7XG5cbiAgICBjb25zdCBjb2xTZWxlY3RvcklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBjb2xTZWxlY3RvcklucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBgJHtwbGF5ZXJ9JHtzaGlwTmFtZX1Db2xTZWxlY3RvcmApO1xuICAgIGNvbFNlbGVjdG9ySW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgYCR7cGxheWVyfSR7c2hpcE5hbWV9Q29sU2VsZWN0b3JgKTtcbiAgICBjb2xTZWxlY3RvcklucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnbnVtYmVyIDAgLSA5Jyk7XG4gICAgcmVzdWx0RGl2LmFwcGVuZENoaWxkKGNvbFNlbGVjdG9ySW5wdXQpO1xuXG4gICAgY29uc3QgZGlyU2VsZWN0b3JMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgZGlyU2VsZWN0b3JMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGAke3BsYXllcn0ke3NoaXBOYW1lfURpclNlbGVjdG9yYCk7XG4gICAgZGlyU2VsZWN0b3JMYWJlbC50ZXh0Q29udGVudCA9ICdEaXJlY3Rpb246ICc7XG4gICAgcmVzdWx0RGl2LmFwcGVuZENoaWxkKGRpclNlbGVjdG9yTGFiZWwpO1xuXG4gICAgY29uc3QgZGlyU2VsZWN0b3JJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgIGRpclNlbGVjdG9ySW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsIGAke3BsYXllcn0ke3NoaXBOYW1lfURpclNlbGVjdG9yYCk7XG4gICAgZGlyU2VsZWN0b3JJbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCBgJHtwbGF5ZXJ9JHtzaGlwTmFtZX1EaXJTZWxlY3RvcmApO1xuXG4gICAgY29uc3QgaG9yaXpvbnRhbE9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgIGhvcml6b250YWxPcHRpb24uc2V0QXR0cmlidXRlKCd2YWx1ZScsICdob3Jpem9udGFsJyk7XG4gICAgaG9yaXpvbnRhbE9wdGlvbi50ZXh0Q29udGVudCA9ICdIb3Jpem9udGFsJztcbiAgICBkaXJTZWxlY3RvcklucHV0LmFwcGVuZENoaWxkKGhvcml6b250YWxPcHRpb24pO1xuXG4gICAgY29uc3QgdmVydGljYWxPcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICB2ZXJ0aWNhbE9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ3ZlcnRpY2FsJyk7XG4gICAgdmVydGljYWxPcHRpb24udGV4dENvbnRlbnQgPSAnVmVydGljYWwnO1xuICAgIGRpclNlbGVjdG9ySW5wdXQuYXBwZW5kQ2hpbGQodmVydGljYWxPcHRpb24pO1xuXG4gICAgcmVzdWx0RGl2LmFwcGVuZENoaWxkKGRpclNlbGVjdG9ySW5wdXQpO1xuXG4gICAgcmV0dXJuIHJlc3VsdERpdjtcbiAgfVxuXG4gIGNvbnN0IHNldHVwQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHNldHVwQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3NldHVwQ29udGFpbmVyJyk7XG5cbiAgY29uc3QgZm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgZm9ybUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmb3JtQ29udGFpbmVyJyk7XG5cbiAgY29uc3QgcGxheWVyMUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBwbGF5ZXIxQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3BsYXllcjFDb250YWluZXInKTtcblxuICBjb25zdCBwbGF5ZXIxTmFtZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgcGxheWVyMU5hbWVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdwMU5hbWUnKTtcbiAgcGxheWVyMU5hbWVMYWJlbC50ZXh0Q29udGVudCA9ICdQbGF5ZXIgMSBOYW1lOic7XG4gIHBsYXllcjFDb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyMU5hbWVMYWJlbCk7XG5cbiAgY29uc3QgcGxheWVyMU5hbWVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHBsYXllcjFOYW1lSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdwMU5hbWUnKTtcbiAgcGxheWVyMU5hbWVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ1lvdXIgTmFtZScpO1xuICBwbGF5ZXIxTmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsICdwMU5hbWUnKTtcbiAgcGxheWVyMUNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXIxTmFtZUlucHV0KTtcblxuICBjb25zdCBzaGlwMSA9IG1ha2VTaGlwSW5wdXQoJ3AxJywgJ0NhcnJpZXInKTtcbiAgcGxheWVyMUNvbnRhaW5lci5hcHBlbmRDaGlsZChzaGlwMSk7XG5cbiAgY29uc3Qgc2hpcDIgPSBtYWtlU2hpcElucHV0KCdwMScsICdCYXR0bGVzaGlwJyk7XG4gIHBsYXllcjFDb250YWluZXIuYXBwZW5kQ2hpbGQoc2hpcDIpO1xuXG4gIGNvbnN0IHNoaXAzID0gbWFrZVNoaXBJbnB1dCgncDEnLCAnQ3J1aXNlcicpO1xuICBwbGF5ZXIxQ29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXAzKTtcblxuICBjb25zdCBzaGlwNCA9IG1ha2VTaGlwSW5wdXQoJ3AxJywgJ1N1Ym1hcmluZScpO1xuICBwbGF5ZXIxQ29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXA0KTtcblxuICBjb25zdCBzaGlwNSA9IG1ha2VTaGlwSW5wdXQoJ3AxJywgJ0Rlc3Ryb3llcicpO1xuICBwbGF5ZXIxQ29udGFpbmVyLmFwcGVuZENoaWxkKHNoaXA1KTtcblxuICBmb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllcjFDb250YWluZXIpO1xuXG4gIGNvbnN0IHBsYXllcjJDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgcGxheWVyMkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdwbGF5ZXIyQ29udGFpbmVyJyk7XG5cbiAgY29uc3QgcGxheWVyMk5hbWVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIHBsYXllcjJOYW1lTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAncDJOYW1lJyk7XG4gIHBsYXllcjJOYW1lTGFiZWwudGV4dENvbnRlbnQgPSAnUGxheWVyIDIgTmFtZTonO1xuICBwbGF5ZXIyQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYXllcjJOYW1lTGFiZWwpO1xuXG4gIGNvbnN0IHBsYXllcjJOYW1lSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBwbGF5ZXIyTmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCAncDJOYW1lJyk7XG4gIHBsYXllcjJOYW1lSW5wdXQuc2V0QXR0cmlidXRlKCduYW1lJywgJ3AyTmFtZScpO1xuICBwbGF5ZXIyTmFtZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnWW91ciBOYW1lJyk7XG4gIHBsYXllcjJDb250YWluZXIuYXBwZW5kQ2hpbGQocGxheWVyMk5hbWVJbnB1dCk7XG5cbiAgY29uc3QgcDJDYXJyaWVyID0gbWFrZVNoaXBJbnB1dCgncDInLCAnQ2FycmllcicpO1xuICBwbGF5ZXIyQ29udGFpbmVyLmFwcGVuZENoaWxkKHAyQ2Fycmllcik7XG5cbiAgY29uc3QgcDJCYXR0bGVzaGlwID0gbWFrZVNoaXBJbnB1dCgncDInLCAnQmF0dGxlc2hpcCcpO1xuICBwbGF5ZXIyQ29udGFpbmVyLmFwcGVuZENoaWxkKHAyQmF0dGxlc2hpcCk7XG5cbiAgY29uc3QgcDJDcnVpc2VyID0gbWFrZVNoaXBJbnB1dCgncDInLCAnQ3J1aXNlcicpO1xuICBwbGF5ZXIyQ29udGFpbmVyLmFwcGVuZENoaWxkKHAyQ3J1aXNlcik7XG5cbiAgY29uc3QgcDJTdWJtYXJpbmUgPSBtYWtlU2hpcElucHV0KCdwMicsICdTdWJtYXJpbmUnKTtcbiAgcGxheWVyMkNvbnRhaW5lci5hcHBlbmRDaGlsZChwMlN1Ym1hcmluZSk7XG5cbiAgY29uc3QgcDJEZXN0cm95ZXIgPSBtYWtlU2hpcElucHV0KCdwMicsICdEZXN0cm95ZXInKTtcbiAgcGxheWVyMkNvbnRhaW5lci5hcHBlbmRDaGlsZChwMkRlc3Ryb3llcik7XG5cbiAgZm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChwbGF5ZXIyQ29udGFpbmVyKTtcblxuICBzZXR1cENvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtQ29udGFpbmVyKTtcblxuICBzdGFydEdhbWVCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgc3RhcnRHYW1lQnRuLnRleHRDb250ZW50ID0gJ1N0YXJ0IEdhbWUnO1xuICBzdGFydEdhbWVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgY29uc3QgbXlGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1Db250YWluZXInKTtcblxuICAgIGNvbnN0IHBsYXllcjEgPSBQbGF5ZXIobXlGb3JtLnAxTmFtZS52YWx1ZSwgR2FtZWJvYXJkKCkpO1xuICAgIGNvbnN0IHBsYXllcjIgPSBQbGF5ZXIobXlGb3JtLnAyTmFtZS52YWx1ZSwgR2FtZWJvYXJkKCkpO1xuICAgIHBsYXllcjEuY3VycmVudFR1cm4gPSB0cnVlO1xuXG4gICAgcGxheWVyMS5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMUNhcnJpZXJSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDFDYXJyaWVyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDFDYXJyaWVyRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoNSwgJ2NhcnJpZXInKSk7XG4gICAgcGxheWVyMS5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMUJhdHRsZXNoaXBSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDFCYXR0bGVzaGlwQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDFCYXR0bGVzaGlwRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoNCwgJ2JhdHRsZXNoaXAnKSk7XG4gICAgcGxheWVyMS5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMUNydWlzZXJSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDFDcnVpc2VyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDFDcnVpc2VyRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoMywgJ2NydWlzZXInKSk7XG4gICAgcGxheWVyMS5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMVN1Ym1hcmluZVJvd1NlbGVjdG9yLnZhbHVlKSwgTnVtYmVyKG15Rm9ybS5wMVN1Ym1hcmluZUNvbFNlbGVjdG9yLnZhbHVlKSwgbXlGb3JtLnAxU3VibWFyaW5lRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoMywgJ3N1Ym1hcmluZScpKTtcbiAgICBwbGF5ZXIxLnBsYXllckJvYXJkLnBsYWNlU2hpcChOdW1iZXIobXlGb3JtLnAxRGVzdHJveWVyUm93U2VsZWN0b3IudmFsdWUpLCBOdW1iZXIobXlGb3JtLnAxRGVzdHJveWVyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDFEZXN0cm95ZXJEaXJTZWxlY3Rvci52YWx1ZSwgU2hpcCgyLCAnZGVzdHJveWVyJykpO1xuXG4gICAgcGxheWVyMi5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMkNhcnJpZXJSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDJDYXJyaWVyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDJDYXJyaWVyRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoNSwgJ2NhcnJpZXInKSk7XG4gICAgcGxheWVyMi5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMkJhdHRsZXNoaXBSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDJCYXR0bGVzaGlwQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDJCYXR0bGVzaGlwRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoNCwgJ2JhdHRsZXNoaXAnKSk7XG4gICAgcGxheWVyMi5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMkNydWlzZXJSb3dTZWxlY3Rvci52YWx1ZSksIE51bWJlcihteUZvcm0ucDJDcnVpc2VyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDJDcnVpc2VyRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoMywgJ2NydWlzZXInKSk7XG4gICAgcGxheWVyMi5wbGF5ZXJCb2FyZC5wbGFjZVNoaXAoTnVtYmVyKG15Rm9ybS5wMlN1Ym1hcmluZVJvd1NlbGVjdG9yLnZhbHVlKSwgTnVtYmVyKG15Rm9ybS5wMlN1Ym1hcmluZUNvbFNlbGVjdG9yLnZhbHVlKSwgbXlGb3JtLnAyU3VibWFyaW5lRGlyU2VsZWN0b3IudmFsdWUsIFNoaXAoMywgJ3N1Ym1hcmluZScpKTtcbiAgICBwbGF5ZXIyLnBsYXllckJvYXJkLnBsYWNlU2hpcChOdW1iZXIobXlGb3JtLnAyRGVzdHJveWVyUm93U2VsZWN0b3IudmFsdWUpLCBOdW1iZXIobXlGb3JtLnAyRGVzdHJveWVyQ29sU2VsZWN0b3IudmFsdWUpLCBteUZvcm0ucDJEZXN0cm95ZXJEaXJTZWxlY3Rvci52YWx1ZSwgU2hpcCgyLCAnZGVzdHJveWVyJykpO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNldHVwQ29udGFpbmVyJykucmVtb3ZlKCk7XG5cbiAgICBET01EaXNwbGF5Q29udHJvbGxlcihwbGF5ZXIxLCBwbGF5ZXIyKTtcbiAgfSk7XG4gIHNldHVwQ29udGFpbmVyLmFwcGVuZENoaWxkKHN0YXJ0R2FtZUJ0bik7XG5cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQnKS5hcHBlbmRDaGlsZChzZXR1cENvbnRhaW5lcik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERPTVNldHVwRm9ybTtcbiIsImNvbnN0IEdhbWVib2FyZCA9ICgpID0+IHtcbiAgY29uc3QgYm9hcmQgPSBbXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICBdO1xuICBjb25zdCBteU90aGVyQm9hcmRDdXpKUyA9IFtcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gICAgW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdLFxuICAgIFtudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsXSxcbiAgICBbbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbF0sXG4gIF07XG4gIHJldHVybiB7XG4gICAgbXlCb2FyZDogYm9hcmQsXG4gICAgZW5lbXlHdWVzc2VzOiBteU90aGVyQm9hcmRDdXpKUyxcbiAgICBteVNoaXBzOiB7fSxcbiAgICBwbGFjZVNoaXAocm93LCBjb2wsIGRpcmVjdGlvbiwgc2hpcCkge1xuICAgICAgdGhpcy5teVNoaXBzW2Ake3NoaXAubmFtZX1gXSA9IHNoaXA7XG4gICAgICAvLyBORUVEIFRPIEFERCBTQU5JVElaQVRJT04sIG1ha2Ugc3VyZSBhbGwgc3BvdHMgYXJlIG51bGwgYmVmb3JlIHBsYWNpbmdcbiAgICAgIC8vIG90aGVyd2lzZSBzaGlwcyBjYW4gb3ZlcmxhcFxuXG4gICAgICBsZXQgY291bnQgPSAwO1xuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgIGlmIChjb2wgKyBzaGlwLmxlbmd0aCA+PSAwICYmIGNvbCArIHNoaXAubGVuZ3RoIDwgMTEpIHtcbiAgICAgICAgICB3aGlsZSAoY29sICsgY291bnQgPCBjb2wgKyBzaGlwLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5teUJvYXJkW3Jvd11bY29sICsgY291bnRdID0gYCR7Y291bnR9JHtzaGlwLm5hbWV9YDtcbiAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ3ZlcnRpY2FsJykge1xuICAgICAgICBpZiAocm93ICsgc2hpcC5sZW5ndGggPiAwICYmIHJvdyArIHNoaXAubGVuZ3RoIDwgMTEpIHtcbiAgICAgICAgICB3aGlsZSAocm93ICsgY291bnQgPCByb3cgKyBzaGlwLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5teUJvYXJkW3JvdyArIGNvdW50XVtjb2xdID0gYCR7Y291bnR9JHtzaGlwLm5hbWV9YDtcbiAgICAgICAgICAgIGNvdW50ICs9IDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICByZWNlaXZlQXR0YWNrKHJvdywgY29sKSB7XG4gICAgICBsZXQgaXNIaXQ7XG4gICAgICBpZiAodGhpcy5teUJvYXJkW3Jvd11bY29sXSAhPT0gbnVsbCAmJiB0aGlzLm15Qm9hcmRbcm93XVtjb2xdICE9PSBmYWxzZSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMubXlCb2FyZFtyb3ddW2NvbF07XG4gICAgICAgIGNvbnN0IGxvY2F0aW9uID0gdmFsdWVbMF07XG4gICAgICAgIGNvbnN0IG5hbWUgPSB2YWx1ZS5zbGljZSgxKTtcbiAgICAgICAgdGhpcy5teVNoaXBzW2Ake25hbWV9YF0uaGl0KGxvY2F0aW9uKTtcblxuICAgICAgICB0aGlzLmVuZW15R3Vlc3Nlc1tyb3ddW2NvbF0gPSB0cnVlO1xuICAgICAgICB0aGlzLm15Qm9hcmRbcm93XVtjb2xdID0gZmFsc2U7XG5cbiAgICAgICAgaXNIaXQgPSBbbmFtZSwgbG9jYXRpb25dO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5lbmVteUd1ZXNzZXNbcm93XVtjb2xdID0gZmFsc2U7XG4gICAgICAgIGlzSGl0ID0gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gaXNIaXQ7XG4gICAgfSxcbiAgICBhbGxTdW5rKCkge1xuICAgICAgLy8gbWFrZSBzdXJlIG15Qm9hcmQgb25seSBjb250YWlucyBbbnVsbCwgZmFsc2VdXG4gICAgICBsZXQgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgIGNvbnN0IGZsYXRCb2FyZCA9IHRoaXMubXlCb2FyZC5mbGF0KCk7XG4gICAgICBmb3IgKGNvbnN0IGkgaW4gZmxhdEJvYXJkKSB7XG4gICAgICAgIGlmICghW251bGwsIGZhbHNlXS5pbmNsdWRlcyhmbGF0Qm9hcmRbaV0pKSB7XG4gICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gR2FtZWJvYXJkO1xuIiwiY29uc3QgUGxheWVyID0gKG5hbWUsIHBsYXllckJvYXJkLCB0eXBlID0gJ3BlcnNvbicpID0+ICh7XG4gIG5hbWUsXG4gIHR5cGUsXG4gIHBsYXllckJvYXJkLFxuICBjdXJyZW50VHVybjogZmFsc2UsXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBQbGF5ZXI7XG4iLCJjb25zdCBTaGlwID0gKGxlbmd0aCwgbmFtZSkgPT4gKHtcbiAgLy8gcmVtb3ZlIGxlbmd0aCBhcmcsIGxldCB0aGUgbmFtZSBkaWN0YXRlIHRoZSBsZW5ndGhcbiAgbGVuZ3RoLFxuICBuYW1lLFxuICBkYW1hZ2U6IG5ldyBBcnJheShsZW5ndGgpLmZpbGwoZmFsc2UpLFxuICBzdW5rOiBmYWxzZSxcbiAgaGl0KGxvY2F0aW9uKSB7XG4gICAgaWYgKHRoaXMuc3VuayA9PT0gZmFsc2UpIHtcbiAgICAgIHRoaXMuZGFtYWdlW2xvY2F0aW9uXSA9IHRydWU7XG4gICAgICB0aGlzLmlzU3VuaygpO1xuICAgIH1cbiAgfSxcbiAgaXNTdW5rKCkge1xuICAgIGlmICghdGhpcy5kYW1hZ2UuaW5jbHVkZXMoZmFsc2UpKSB7XG4gICAgICB0aGlzLnN1bmsgPSB0cnVlO1xuICAgIH1cbiAgfSxcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNoaXA7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbi8vIGltcG9ydCBTaGlwIGZyb20gJy4vc2hpcCc7XG4vLyBpbXBvcnQgR2FtZWJvYXJkIGZyb20gJy4vZ2FtZWJvYXJkJztcbi8vIGltcG9ydCBQbGF5ZXIgZnJvbSAnLi9wbGF5ZXInO1xuLy8gaW1wb3J0IERPTURpc3BsYXlDb250cm9sbGVyIGZyb20gJy4vRE9NRGlzcGxheUNvbnRyb2xsZXInO1xuaW1wb3J0IERPTVNldHVwRm9ybSBmcm9tICcuL0RPTVNldHVwRm9ybSc7XG5cbkRPTVNldHVwRm9ybSgpO1xuXG4vLyBBZGRyZXNzIHNoaXAgb3ZlcmxhcCBpc3N1ZSBpbiBwbGFjZVNoaXBcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIkRPTURpc3BsYXlDb250cm9sbGVyIiwicGxheWVyMSIsInBsYXllcjIiLCJpZGsiLCJwbGF5ZXJCb2FyZCIsImVuZW15R3Vlc3NlcyIsIm15Qm9hcmQiLCJhbGxCb2FyZHMiLCJjbGFzc0xpc3QiLCJhZGQiLCJhQm9hcmQiLCJib2FyZENvbnRhaW5lciIsInJvdyIsInJvd3MiLCJjb2wiLCJjZWxsIiwiY3VycmVudFR1cm4iLCJhbGxTdW5rIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlY2VpdmVBdHRhY2siLCJ0dXJuRGlhbG9nIiwidGV4dENvbnRlbnQiLCJuYW1lIiwiU2hpcCIsIkdhbWVib2FyZCIsIlBsYXllciIsIm1ha2VTaGlwSW5wdXQiLCJwbGF5ZXIiLCJzaGlwTmFtZSIsInJlc3VsdERpdiIsImxhYmVsIiwicm93U2VsZWN0b3JMYWJlbCIsInJvd1NlbGVjdG9ySW5wdXQiLCJjb2xTZWxlY3RvckxhYmVsIiwiY29sU2VsZWN0b3JJbnB1dCIsImRpclNlbGVjdG9yTGFiZWwiLCJkaXJTZWxlY3RvcklucHV0IiwiaG9yaXpvbnRhbE9wdGlvbiIsInZlcnRpY2FsT3B0aW9uIiwic2V0dXBDb250YWluZXIiLCJmb3JtQ29udGFpbmVyIiwicGxheWVyMUNvbnRhaW5lciIsInBsYXllcjFOYW1lTGFiZWwiLCJwbGF5ZXIxTmFtZUlucHV0Iiwic2hpcDEiLCJzaGlwMiIsInNoaXAzIiwic2hpcDQiLCJzaGlwNSIsInBsYXllcjJDb250YWluZXIiLCJwbGF5ZXIyTmFtZUxhYmVsIiwicGxheWVyMk5hbWVJbnB1dCIsInAyQ2FycmllciIsInAyQmF0dGxlc2hpcCIsInAyQ3J1aXNlciIsInAyU3VibWFyaW5lIiwicDJEZXN0cm95ZXIiLCJzdGFydEdhbWVCdG4iLCJteUZvcm0iLCJwMU5hbWUiLCJ2YWx1ZSIsInAyTmFtZSIsInBsYWNlU2hpcCIsIk51bWJlciIsInAxQ2FycmllclJvd1NlbGVjdG9yIiwicDFDYXJyaWVyQ29sU2VsZWN0b3IiLCJwMUNhcnJpZXJEaXJTZWxlY3RvciIsInAxQmF0dGxlc2hpcFJvd1NlbGVjdG9yIiwicDFCYXR0bGVzaGlwQ29sU2VsZWN0b3IiLCJwMUJhdHRsZXNoaXBEaXJTZWxlY3RvciIsInAxQ3J1aXNlclJvd1NlbGVjdG9yIiwicDFDcnVpc2VyQ29sU2VsZWN0b3IiLCJwMUNydWlzZXJEaXJTZWxlY3RvciIsInAxU3VibWFyaW5lUm93U2VsZWN0b3IiLCJwMVN1Ym1hcmluZUNvbFNlbGVjdG9yIiwicDFTdWJtYXJpbmVEaXJTZWxlY3RvciIsInAxRGVzdHJveWVyUm93U2VsZWN0b3IiLCJwMURlc3Ryb3llckNvbFNlbGVjdG9yIiwicDFEZXN0cm95ZXJEaXJTZWxlY3RvciIsInAyQ2FycmllclJvd1NlbGVjdG9yIiwicDJDYXJyaWVyQ29sU2VsZWN0b3IiLCJwMkNhcnJpZXJEaXJTZWxlY3RvciIsInAyQmF0dGxlc2hpcFJvd1NlbGVjdG9yIiwicDJCYXR0bGVzaGlwQ29sU2VsZWN0b3IiLCJwMkJhdHRsZXNoaXBEaXJTZWxlY3RvciIsInAyQ3J1aXNlclJvd1NlbGVjdG9yIiwicDJDcnVpc2VyQ29sU2VsZWN0b3IiLCJwMkNydWlzZXJEaXJTZWxlY3RvciIsInAyU3VibWFyaW5lUm93U2VsZWN0b3IiLCJwMlN1Ym1hcmluZUNvbFNlbGVjdG9yIiwicDJTdWJtYXJpbmVEaXJTZWxlY3RvciIsInAyRGVzdHJveWVyUm93U2VsZWN0b3IiLCJwMkRlc3Ryb3llckNvbFNlbGVjdG9yIiwicDJEZXN0cm95ZXJEaXJTZWxlY3RvciIsIm15U2hpcHMiLCJkaXJlY3Rpb24iLCJzaGlwIiwiaXNIaXQiLCJsb2NhdGlvbiIsInNsaWNlIiwiaGl0IiwiZmxhdEJvYXJkIiwiZmxhdCIsImluY2x1ZGVzIiwidHlwZSIsImRhbWFnZSIsIkFycmF5IiwiZmlsbCIsInN1bmsiLCJpc1N1bmsiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIl0sInNvdXJjZVJvb3QiOiIifQ==